<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<mapper namespace="接口类全类名"> id=方法名-->
<mapper namespace="EmpMapperDynamicSql">
<!--    if choose(when,otherwise) trim(where,set) foreach-->
<!-- test=从参数进行判断，遇见特殊符号应该写转义字符-->
    <select id="getEmpsByConditionIf" resultType="Employee" >
    select * from employee
    where 1=1
    <if test="id!=null">and id=#{id}</if>
    <if test="lastName!=null and lastName!=&quot;&quot;"> and last_name like #{lastName}</if>
    <if test="email!=null and email.trim()!=&quot;&quot;">and email=#{email}</if>
    <if test="gender==&quot;male&quot; or gender==&quot;female&quot;"> and gender=#{gender}</if>
    </select>
<!-- trim，解决 多余的and 语法错误-->
    <select id="getEmpsByConditionTrim" resultType="Employee" >
        select * from employee
        <trim prefix="where" suffixOverrides="and">
            <if test="id!=null">id=#{id} and</if>
            <if test="lastName!=null and lastName!=&quot;&quot;"> last_name like #{lastName} and</if>
            <if test="email!=null and email.trim()!=&quot;&quot;">email=#{email} and</if>
            <if test="gender==&quot;male&quot; or gender==&quot;female&quot;">gender=#{gender}</if>
        </trim>

    </select>
<!--choose-->
    <select id="getEmpsByConditionChoose" resultType="Employee">
        select * from employee
        <where>
            <choose>
                <when test="id!=null">id=#{id}</when>
                <when test="lastName!=null">last_name like #{lastName}</when>
                <when test="email!=null">email=#{email}</when>
                <otherwise>gender="male"</otherwise>
            </choose>
        </where>
    </select>
<!--    where-查询条件，set-更新(不用担心多的逗号,也用trim)-->
    <update id="updateEmp">
        update employee
        <set>
            <if test="lastName!=null and lastName!=&quot;&quot;"> last_name=#{lastName},</if>
            <if test="email!=null and email.trim()!=&quot;&quot;">email=#{email},</if>
            <if test="gender==&quot;male&quot; or gender==&quot;female&quot;">gender=#{gender}</if>
        </set>
        <where>id=#{id}</where>
    </update>
</mapper>
